{"version":3,"sources":["components/Header.js","hooks/useSelect.js","components/Formulario.js","components/Noticia.js","components/Noticias.js","App.js","serviceWorker.js","index.js","components/Formulario.module.css"],"names":["Header","titulo","className","href","prototype","PropTypes","string","isRequired","useSelect","stateInicial","opciones","useState","state","setState","value","onChange","e","target","map","opcion","key","label","Formulario","setCategoria","categoria","SelectNoticias","styles","buscador","onSubmit","preventDefault","heading","type","func","Noticia","noticia","urlToImage","url","title","description","source","imagen","src","alt","name","heref","rel","object","Noticias","noticias","array","App","setNoticias","useEffect","a","fetch","respuesta","json","articles","consultarApi","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.09968d40.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <nav className=\"nav-wrapper light-blue darken-3\">\r\n            <a href=\"#\" className=\"brand-logo center\">{titulo}</a>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Header;\r\n\r\nHeader.prototype = {\r\n    titulo: PropTypes.string.isRequired\r\n}","import React, { useState } from \"react\";\r\n\r\nconst useSelect = (stateInicial, opciones) => {\r\n  const [state, setState] = useState(stateInicial);\r\n\r\n  const SelectNoticias = () => (\r\n    <select\r\n      className=\"browser-default\"\r\n      value={state}\r\n      onChange={(e) => setState(e.target.value)}\r\n    >\r\n      {opciones &&\r\n        opciones.map((opcion) => (\r\n          <option key={opcion.value} value={opcion.value}>\r\n            {opcion.label}\r\n          </option>\r\n        ))}\r\n    </select>\r\n  );\r\n\r\n  return [state, SelectNoticias];\r\n};\r\n\r\nexport default useSelect;\r\n","import React from \"react\";\r\nimport styles from \"./Formulario.module.css\";\r\nimport useSelect from \"../hooks/useSelect\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({ setCategoria }) => {\r\n  const OPCIONES = [\r\n    { value: \"general\", label: \"General\" },\r\n    { value: \"business\", label: \"Negocios\" },\r\n    { value: \"entertainment\", label: \"Entretenimiento\" },\r\n    { value: \"health\", label: \"Salud\" },\r\n    { value: \"science\", label: \"Ciencia\" },\r\n    { value: \"sports\", label: \"Deportes\" },\r\n    { value: \"technology\", label: \"Tecnología\" },\r\n  ];\r\n\r\n  const [categoria, SelectNoticias] = useSelect(\"general\", OPCIONES);\r\n\r\n  const buscarNoticias = (e) => {\r\n    e.preventDefault();\r\n    setCategoria(categoria);\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.buscador} row`}>\r\n      <div className=\"col s12 m8 offset-m2\">\r\n        <form onSubmit={buscarNoticias}>\r\n          <h2 className={styles.heading}>Encuentra Noticias por Categoría</h2>\r\n          <SelectNoticias></SelectNoticias>\r\n          <div className=\"input-field col s12\">\r\n            <input\r\n              type=\"submit\"\r\n              className={`${styles[\"btn-block\"]} btn-large amber darken-2`}\r\n              value=\"Buscar\"\r\n            ></input>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n\r\nFormulario.prototype = {\r\n    setCategoria: PropTypes.func.isRequired\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Noticia = ({ noticia }) => {\r\n  const { urlToImage, url, title, description, source } = noticia;\r\n\r\n  const imagen = urlToImage ? (\r\n    <div className=\"card-image\">\r\n      <img src={urlToImage} alt={title}></img>\r\n      <span className=\"card-title\">{source.name}</span>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"col s12 m6 l4\">\r\n      <div className=\"card\">\r\n        {imagen}\r\n\r\n        <div className=\"card-content\">\r\n          <h3>{title}</h3>\r\n          <h3>{description}</h3>\r\n        </div>\r\n\r\n        <div className=\"card-action\">\r\n          <a\r\n            heref={url}\r\n            target=\"_blank\"\r\n            rel=\"nooopener noreferrer\"\r\n            className=\"waves-effect waves-light btn\"\r\n          >\r\n            Ver Noticia Completa\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Noticia;\r\n\r\nNoticia.prototype = {\r\n    noticia: PropTypes.object.isRequired\r\n}\r\n","import React from \"react\";\r\nimport Noticia from \"./Noticia\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Noticias = ({ noticias }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {noticias &&\r\n        noticias.map((noticia) => (\r\n          <Noticia key={noticia.url} noticia={noticia}></Noticia>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Noticias;\r\n\r\nNoticias.prototype = {\r\n  noticias: PropTypes.array.isRequired,\r\n};\r\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Noticias from \"./components/Noticias\";\n\nfunction App() {\n  const [categoria, setCategoria] = useState(\"\");\n  const [noticias, setNoticias] = useState([]);\n\n  useEffect(() => {\n    const consultarApi = async () => {\n      const url = `https://newsapi.org/v2/top-headlines?country=ar&category=${categoria}&apiKey=41ccbcd371644a398e9dcea45ebc65e9`;\n\n      const respuesta = await fetch(url);\n      const noticias = await respuesta.json();\n\n      setNoticias(noticias.articles);\n    };\n\n    consultarApi();\n  }, [categoria]);\n\n  return (\n    <Fragment>\n      <Header titulo=\"Buscador de noticias\"></Header>\n      <div className=\"container white\">\n        <Formulario setCategoria={setCategoria}></Formulario>\n        <Noticias noticias={noticias}></Noticias>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Formulario_heading__VP-FT\",\"buscador\":\"Formulario_buscador__3sl7z\",\"btn-block\":\"Formulario_btn-block__1L0ap\"};"],"sourceRoot":""}